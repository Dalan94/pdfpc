{"name":"pdfpc","body":"=====\r\npdfpc\r\n=====\r\n\r\npdfpc is a fork from pdf-presenter-console by Jakob Westhoff, with some enhancements. This is preliminary page which just includes the README. I will eventually update it to a \"real\" project page.\r\n\r\nAbout\r\n=====\r\n\r\nThe Pdf Presenter Console (PPC) is a GTK based presentation viewer application\r\nwhich uses Keynote like multi-monitor output to provide meta information to the\r\nspeaker during the presentation. It is able to show a normal presentation\r\nwindow on one screen, while showing a more sophisticated overview on the other\r\none providing information like a picture of the next slide, as well as the left\r\nover time till the end of the presentation. The input files processed by PPC\r\nare PDF documents, which can be created using nearly any of today's presentation\r\nsoftware.\r\n\r\nMotivation\r\n==========\r\n\r\nThe idea to create PPC came up during the IPC 2009 where I saw a lot of people\r\nrunning around with their MacBooks using Keynote to present their slides. I\r\nalways liked the presenter console of Keynote. Therefore I began to research if\r\nany solution like this existed for my Linux system. I came across the Sun\r\npresenter console for Open-Office Impress, which seemed to do exactly what I\r\nwanted. Unfortunately I stopped using Impress for creating presentations in\r\nfavor to Latex Beamer quite some time ago. Therefore this Open-Office plugin was\r\nno solution to my problem. I wanted something flexible which would be able to\r\nuse simple PDF documents as input. I found some projects which were started\r\nhaving the same intentions than I did. Unfortunately these projects did either\r\nnever reach the implementation phase or they were implemented but I did not get\r\nthem to work properly. \r\n\r\nAll this brought me to the decision to create a simple presenter console on my\r\nown. At this point the Pdf Presenter Console was born.\r\n\r\nScreenshots\r\n===========\r\n\r\nThe presenter view:\r\n![Presenter view](http://davvil.github.com/pdfpc/screenshots/pdfpc-presenter.png)\r\n\r\nThe overview mode:\r\n![Overview mode](http://davvil.github.com/pdfpc/screenshots/pdfpc-overview.png)\r\n\r\nRequirements\r\n============\r\n\r\nIn order to compile and run the Pdf Presenter Console the following\r\nrequirements need to be met:\r\n\r\n- Vala Compiler Version >=0.11.0\r\n- CMake Version >=2.6\r\n- Gtk+ 2.x\r\n- libPoppler with glib bindings\r\n- librsvg\r\n\r\nCompile and install\r\n===================\r\n\r\nAfter retrieving the archive unpack it using the following command::\r\n\r\n    tar xvzf pdf_presenter_console-VERSION.tar.gz\r\n\r\nSwitch to the unpacked source directory and create some sort of build\r\ndirectory. This may be done as follows::\r\n\r\n    cd pdf_presenter_console-VERSION\r\n    mkdir build\r\n    cd build\r\n\r\nAfter you are inside the build directory create the needed Makefiles using\r\nCMake::\r\n\r\n    cmake ../\r\n\r\nIf you have put your build directory elsewhere on your system adapt the path\r\nabove accordingly. You need to provide CMake with the pdf_presenter_console\r\ndirectory which you just decompressed.\r\n\r\nYou may alter the final installation prefix at this time. By default the\r\npdf_presenter_console executable will be installed under */usr/local/bin*. If\r\nyou want to change that, for example to be */usr/bin* you may specify another\r\ninstallation prefix as follows::\r\n\r\n    cmake -DCMAKE_INSTALL_PREFIX=\"/usr\" ../\r\n\r\nIf all requirements are met CMake will tell you that it created all the\r\nnecessary build files for you. If any of the requirements were not met you\r\nwill be informed of it to provide the necessary files or install the\r\nappropriate packages.\r\n\r\nThe next step is to compile the source using GNU Make or any other make\r\nderivative you may have installed. Simply issue the following command to start\r\nbuilding the application::\r\n\r\n    make\r\n\r\nAfter the build completes successfully the *pdf_presenter_console* executable\r\ncan be found inside the *src* directory of you build path. If you want to\r\ninstall it automatically to the *bin* directory below the before provided\r\nprefix do as follows::\r\n\r\n    make install\r\n\r\nYou may need to prefix this command with a *sudo* or obtain super-user rights\r\nin any other way applicable to your situation.\r\n\r\nCongratulations you just installed Pdf Presenter Console on your system.\r\n\r\n\r\nRetrieving the current trunk from the softwares git repository\r\n--------------------------------------------------------------\r\n\r\nIf you want to use the bleeding edge version of this software, you may always\r\nretrieve the current development branch from its git repository. Do this on\r\nyour own risk. It may not compile, make your socks disappear or even eat your\r\ncat ;).\r\n\r\nThe repository is hosted at github__. If the git executable is available on\r\nyour system it can be retrieved using the following command::\r\n\r\n    git clone git://github.com/jakobwesthoff/Pdf-Presenter-Console.git\r\n\r\nAfter it has been transfered you need to switch to the\r\n``Pdf-Presenter-Console`` directory, which has just been created. From inside\r\nthis directory use these commands to retrieve all needed submodules::\r\n\r\n    git submodule init\r\n    git submodule update\r\n\r\nYou are now set to compile and install the presenter as described in the\r\nsection above. However as mentioned above the code might not compile at all.\r\n\r\n\r\n__ http://github.com/jakobwesthoff/Pdf-Presenter-Console\r\n\r\n\r\nStartup and usage\r\n=================\r\n\r\nThe Pdf Presenter Console is run by calling it's executable on the commandline\r\nfollowed by the pdf you want to present::\r\n\r\n    pdf_presenter_console your/pdf/file.pdf\r\n\r\nCalling the application like this is the easiest way to go. There are certain\r\ncommandline options you may use to customize the behavior of the presenter to\r\nyour likings::\r\n\r\n    Usage:\r\n      pdf_presenter_console [OPTION...] <pdf-file>\r\n\r\n    Help Options:\r\n      -h, --help                    Show help options\r\n\r\n    Application Options:\r\n      -d, --duration=N              Duration in minutes of the presentation used for timer display. (Default 45 minutes)\r\n      -l, --last-minutes=N          Time in minutes, from which on the timer changes its color. (Default 5 minutes)\r\n      -u, --current-size=N          Percentage of the presenter screen to be used for the current slide. (Default 60)\r\n      -s, --switch-screens          Switch the presentation and the presenter screen.\r\n      -c, --disable-cache           Disable caching and pre-rendering of slides to save memory at the cost of speed.\r\n      -z, --disable-compression     Disable the compression of slide images to trade memory consumption for speed. (Avg. factor 30)\r\n      -b, --black-on-end            Add an additional black slide at the end of the presentation\r\n      -S, --single-screen=S         Force to use only one screen\r\n\r\nCaching / Prerendering\r\n----------------------\r\n\r\nTo allow fast changes between the different slides of the presentation the pdf\r\npages are prerendered to memory. The progress bar on the bottom of the\r\npresenter screen indicates how many percent of the slides have been\r\npre-rendered already. During the initial rendering phase this will slow-down\r\nslide changes, as a lot of cpu power is used for the rendering process in the\r\nbackground. After the cache is fully primed however the changing of slides\r\nshould be much faster as with normal pdf viewers.\r\n\r\nAs the prerendering takes a lot of memory it can be disabled using the\r\n*--disable-cache* switch at the cost of speed.\r\n\r\n\r\nCache compression\r\n-----------------\r\n\r\nSince version 2.0 of the Pdf-Presenter-Console the prerendered and cached\r\nslides can be compressed in memory to save up some memory. Without compression\r\na set of about 100 pdf pages can easily grow up to about 1.5gb size. Netbooks\r\nwith only 1gb of memory would swap themselves to death if prerendering is\r\nenabled in such a situation. The compression is enabled by default as it does\r\nnot harm rendering speed in a noticeable way on most systems. It does however\r\nslows down prerendering by about a factor of 2. If you have got enough memory\r\nand want to ensure the fastest possible prerendering you can disable slide\r\ncompression by using the *-z* switch. But be warned using the uncompressed\r\nprerendering storage will use about 30 times the memory the new compressed\r\nstorage utilizes (aka the 1.5gb become about 50mb)\r\n\r\n\r\nKeybindings\r\n-----------\r\n\r\nDuring the presentation the following key strokes and mouse clicks are detected\r\nand interpreted:\r\n\r\n- Left cursor key / Page up / Right mouse button\r\n    - Go back one slide\r\n- Left cursor key / Page up / Right mouse button\r\n    - Go back 10 slides\r\n- Up cursor key\r\n    - Go back one \"user slide\" (see section about overlays below)\r\n- Right cursor key / Page down / Return / Space / Left mouse button\r\n    - Go forward one slide\r\n- Shift + Right cursor key / Page down / Return / Space / Left mouse button\r\n    - Go forward 10 slides\r\n- Down cursor key\r\n    - Go forward one user slide\r\n- Home\r\n    - Go back to the first slide\r\n- End\r\n    - Jump to the last slide\r\n- Tab\r\n    - Toggle overview mode\r\n- g\r\n    - Input a slide number to jump to\r\n- Escape / q\r\n    - Quit the presentation viewer\r\n- b\r\n    - Turn off the presentation view (i.e. fill it with a black color)\r\n- n\r\n    - Edit note for current slide\r\n- f\r\n    - Freeze the current presentation display (the presenter display is still\r\n      fully active)\r\n- o\r\n    - Toggle the not-user-slide flag for one particular slide (see Overlays\r\n      below)\r\n- p\r\n    - Pause timer\r\n- r\r\n    - Reset timer\r\n- e\r\n    - Define end slide\r\n\r\nTimer\r\n-----\r\n\r\nIf a duration is given (-d option), the timer will show a countdown with the\r\ngiven parameters. If no duration is specified (or if a value of 0 is given to\r\nthe -d option), the timer will show how much time has been spent. The duration\r\nis stored automatically, so you do not need to repeat it for every invocation.\r\n\r\nThe timer is started if you are navigating away from the first page for the\r\nfirst time. This feature is quite useful as you may want to show the titlepage\r\nof your presentation while people are still entering the room and the\r\npresentation hasn't really begun yet. If you want to start over you can use the\r\n*r* key which will make the presenter reset the timer.\r\n\r\nIf a duration is given, at the moment the timer reaches the defined\r\n``last-minutes`` value it will change color to indicate your talk is nearing its\r\nend.  As soon as the timer reaches the zero mark (00:00:00) it will turn red and\r\ncount further down showing a negative time, to provide information on how many\r\nminutes you are overtime.\r\n\r\nNotes\r\n-----\r\n\r\nTextual notes can be displayed for each slide. While in the presentation,\r\npressing 'n' will allow you to take notes for the screen.  To go out of editing\r\nmode, press the Escape key. Note that while editing a note the keybindings stop\r\nworking, i.e. you are not able to change slides.\r\n\r\nThe notes are stored in the given file in a plain text format, easy to edit\r\nalso from outside the program. See the section about the pdfpc format below.\r\n\r\nOverview mode\r\n-------------\r\n\r\nPressing tab you can enter the overview mode, where miniatures for the slides\r\nare shown. You can select one slide to jump to with the mouse or with the arrow\r\nkeys. You can also define overlays and the end slide (see next sections) in\r\nthis mode.\r\n\r\nOverlays\r\n--------\r\n\r\nMany slide preparation systems allow for overlays, i.e. sets of slides that\r\nare logically grouped together as a single, changing slide. Examples include\r\nenumerations where the single items are displayed one after another or rough\r\n\"animations\", where parts of a picture change from slide to slide. Pdf\r\nPresenter Console includes facilities for dealing with such overlays.\r\n\r\nIn this description, we will differentiation between slides (i.e. pages in the\r\npdf document) and \"user slides\", that are the logical slides. The standard\r\nforward movement command (page down, enter, etc.) moves through one slide at a\r\ntime, as expected. That means that every step in the overlay is traversed.\r\nThe backward movement command works differently depending if the current and\r\nprevious slides are part of an overlay:\r\n\r\n- If the current slide is part of an overlay we just jump to the previous\r\n  slide. That means that we are in the middle of an overlay we can jump\r\n  forward and backward through the single steps of it\r\n\r\n- If the current slide is not part of an overlay (or if it is the first one),\r\n  but the previous slides are, we jump to the previous user slide. This means\r\n  that when going back in the presentation you do not have to go through every\r\n  step of the overlay, Pdf Presenter Console just shows the first slide of\r\n  the each overlay. As you normally only go back in a presentation when looking\r\n  for a concrete slide, this is more convenient.\r\n\r\nThe up and down cursor keys work on a user slide basis. You can use them to\r\nskip the rest of an overlay or to jump to the previous user slide, ignoring the\r\nstate of the current slide. The 'n' and 'p' commands also work on a user slide\r\nbasis.\r\n\r\nWhen going through an overlay, two additional previews may be activated in the\r\npresenter view, just below the main view, showing the next and the previous\r\nslide in an overlay.\r\n\r\nPdf Presenter Console tries to find these overlays automatically by looking\r\ninto the page labels in the pdf file. For LaTeX this works correctly at least\r\nwith the beamer class and also modifying the page numbers manually (compiling\r\nwith pdflatex). If your preferred slide-producing method does not work correctly\r\nwith this detection, you can supply this information using the 'o' key for each\r\nslide that is part of an overlay (except the first one!). The page numbering is\r\nalso adapted. This information is automatically stored.\r\n\r\nEnd slide\r\n---------\r\n\r\nSome people like to have some additional, backup slides after the last slide in\r\nthe actual presentation. Things like bibliographic references or slides\r\nreferring to specialized questions are typical examples. Pdf Presenter Console\r\nlets you define which is the last slide in the actual presentation vie the 'e'\r\nkey. This just changes the progress display in the presenter screen, as to have\r\na better overview of how many slides are left.\r\n\r\npdfpc Files\r\n-----------\r\n\r\nThe notes and other additional information are stored in a file with the\r\nextension \"pdfpc\". When invoking Pdf Presenter Console with a non pdfpc file, it\r\nautomatically checks if there exists such a file and in this case loads the\r\nadditional information. This means that you normally do not have to deal with\r\nthis kind of files explicitly.\r\n\r\nThere are however cases where you may want to edit the files manually. The most\r\ntypical case is if you add or remove some slides after you have edited notes or\r\ndefined overlays. It may be quicker to edit the pdfpc file than to re-enter the\r\nwhole information. Future versions may include external tools for dealing with\r\nthis case automatically.\r\n\r\nThe files are plain-text files that should be fairly self-explanatory. A couple\r\nof things to note\r\n- The slide numbers of the notes refer to user slides\r\n- The [notes] sections must be the last one in the file\r\n- For the programmers out there: slide indexes start at 1\r\n\r\nDownload\r\n========\r\n\r\nThe most recent release can always be obtained from:\r\n\r\n    http://westhoffswelt.de\r\n\r\nThe latest and bleeding edge development version can be obtained by checking\r\nout the development git repository using the following command::\r\n\r\n    $ git clone git://github.com/jakobwesthoff/Pdf-Presenter-Console.git\r\n\r\nThe trunk version is not guaranteed to build or be working correctly. So be\r\nwarned if you use it. \r\n\r\n\r\nContact\r\n=======\r\n\r\nEvery comment or idea for a future version of this presenter is welcome. Just\r\nsend a mail to jakob@westhoffswelt.de. \r\n\r\nOther ways of contact can be retrieved through visiting\r\n\r\n    http://westhoffswelt.de\r\n\r\n\r\n\f\r\n..\r\n   Local Variables:\r\n   mode: rst\r\n   fill-column: 79\r\n   End: \r\n   vim: et syn=rst tw=79\r\n","tagline":"A Keynote like presenter console with multi-monitor support and the ability to read PDF as input files.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}